/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import (
	"fmt"
)

// Return n-1 and n
func nextInFib(nmin2 int, nmin1 int) (int, int) {
	return nmin1, nmin1 + nmin2
}

func main() {
	limit := 4000000
	n0, n1 := 1, 2

	// n1 is already even
	result := n1

	for n1 < limit {
		n0, n1 = nextInFib(n0, n1)
		if n1%2 == 0 {
			result += n1
		}
	}

	fmt.Println(result)
}
